"use strict";

var _processMessage = _interopRequireDefault(require("../process-message"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

test('adds new rules to summary', function () {
  var summary = [];
  expect((0, _processMessage.default)(summary, {
    ruleId: 'new rule',
    severity: 1
  })).toContainEqual({
    ruleId: 'new rule',
    errors: 0,
    warnings: 1
  });
  expect((0, _processMessage.default)(summary, {
    ruleId: 'another rule',
    severity: 2
  })).toContainEqual({
    ruleId: 'another rule',
    errors: 1,
    warnings: 0
  });
});
test('updates errors / warnings of existing rules', function () {
  var summary = (0, _processMessage.default)([], {
    ruleId: 'rule',
    severity: 1
  });
  expect((0, _processMessage.default)(summary, {
    ruleId: 'rule',
    severity: 1
  })).toContainEqual({
    ruleId: 'rule',
    errors: 0,
    warnings: 2
  });
  expect((0, _processMessage.default)(summary, {
    ruleId: 'rule',
    severity: 2
  })).toContainEqual({
    ruleId: 'rule',
    errors: 1,
    warnings: 2
  });
});
test('maps ruleId=null to `syntax error`', function () {
  expect((0, _processMessage.default)([], {
    ruleId: null,
    severity: 2
  })).toContainEqual({
    ruleId: 'syntax error',
    errors: 1,
    warnings: 0
  });
});